inherit(lib::test);

class SerializeTest{
	array#Test{
		ms: MemoryStream();

		a: [10, 20];
		a.push_back(a);

		ms.serialize(a);
		ms.seek(0);
		b: ms.deserialize;


		assert a[0]==b[0];
		assert a[1]==b[1];
		assert a[2][0]==10;
		assert a[2][1]==20;
	}
	
	values#Test{
		ms: MemoryStream();

		a: (1, 2, 3);

		ms.serialize(a);
		ms.seek(0);
		b: ms.deserialize;
		
		assert b == (1, 2, 3);
	}

	instance#Test{
		lib::Mew: class{
			+_test3: 10;
			+_foo3: 25;
		}

		lib::Boo: class(lib::Mew){
			+_test2: 10;
			+_foo2: 20;
		}

		lib::Foo: class(lib::Boo){
			+_test: 10;
			+_foo: 20;
		}

		f: lib::Foo();
		f.test3 = f;

		obj: ["test", "object", "test", f];
		obj.push_back(obj);

		ms: MemoryStream();
		ms.serialize(obj);
		ms.seek(0);
		b: ms.deserialize;
		
		assert b[4][3].foo3==25;
	}
}
